
# release: make release WITH_GIT_BRANCH=origin/master
# release: make release WITH_NODE_BRANCH=refs/tags/ovirt-node-3.0.4 WITH_ISO_BRANCH=refs/tags/ovirt-node-iso-3.0.4
# release: make release WITH_GIT_BRANCH=<commitid>

export OVIRT_CACHE_DIR=$(shell echo $$HOME)/ovirt-cache/
export OVIRT_LOCAL_REPO=file://$(OVIRT_CACHE_DIR)/ovirt/

TODAY :=$(shell date -u +%Y%m%d%H%M)
BUILDEXTRA =
WITH_BUILDNUMBER =$(TODAY)$(BUILDEXTRA)
WITH_RELEASE=

GIT_REMOTE := origin
WITH_GIT_BRANCH := master
WITH_NODE_BRANCH := $(WITH_GIT_BRANCH)
WITH_ISO_BRANCH := $(WITH_GIT_BRANCH)

.PHONY = checksums git-update iso relocate-iso release-package clean-iso

rpms: cond-update-release
	cd ovirt-node && ./autogen.sh --with-image-minimizer && make rpm publish

iso: rpms
	cd ovirt-node-iso && ./autogen.sh --with-recipe=../ovirt-node/recipe && make version.ks && make iso

clean-cache:
	rm -rvf ~/ovirt-cache/ovirt/*

clean-rpmbuild:
	rm -rvf ~/rpmbuild/RPMS/*
	rm -rvf ~/rpmbuild/SRPMS/*

clean-iso:
	rm -vf ovirt-node-iso/*.iso

relocate-iso:
	mv -v ovirt-node-iso/*.iso .

versions-in-iso:
	@echo "Packages in ISO: $(iso)"
	isoinfo -J -i $(iso) -x /isolinux/manifest-rpm.txt | grep -i ovirt

cond-update-release:
ifdef WITH_RELEASE
	LC_ALL=en sed -i "/^Release:/ s/\(Release:[[:space:]]\+\)\([0-9]\+.[0-9]\+\)/\1$(WITH_RELEASE)/" ovirt-node/ovirt-node.spec.in ovirt-node-iso/ovirt-node-iso.spec.in
	cd ovirt-node && git diff && git commit -asm"Setting release to $(WITH_RELEASE)"
	cd ovirt-node-iso && git diff && git commit -asm"Setting release to $(WITH_RELEASE)"
else
	echo Not updating release
endif

draft: BUILDEXTRA=draft
draft: clean-iso iso relocate-iso
	@echo "Draft done"

git-update:
	cd ovirt-node && git fetch $(GIT_ORIGIN) && git checkout $(WITH_NODE_BRANCH) && git reset --hard $(WITH_NODE_BRANCH) && git clean -fdx
	cd ovirt-node-iso && git fetch $(GIT_ORIGIN) && git checkout $(WITH_ISO_BRANCH) && git fetch && git reset --hard $(WITH_ISO_BRANCH) && git clean -fdx

release: BUILDEXTRA=
release: clean-cache clean-rpmbuild clean-iso git-update iso relocate-iso release-package
	ls -1 ovirt-node/*.tar.*
	ls -1 ~/rpmbuild/SRPMS/ovirt-node*.src.rpm
	ls -1 ~/ovirt-cache/ovirt/noarch/
	ls -1 *.iso
	@echo "Release with '$(WITH_RELEASE).$(WITH_BUILDNUMBER)' done:"
	cat ovirt-node-iso/version.ks

release-package: PKGNAME=$(shell source ovirt-node-iso/version.ks ; echo $$PACKAGE-$$VERSION-$$RELEASE)-release
release-package: SRCFILES=$(shell find ovirt-node/*.tar.* -type f)
release-package: RPMFILES=~/rpmbuild/SRPMS/ ~/ovirt-cache/ovirt/noarch/
release-package: ISOFILES=$(shell find *.iso -type f)
release-package: DIST=$(shell rpm -E "%{dist}" | tr -d ".")
release-package:
	test -n "$(PKGNAME)"
	mkdir -p $(PKGNAME)/rpm/$(DIST) $(PKGNAME)/iso $(PKGNAME)/src
	cp -av $(RPMFILES) $(PKGNAME)/rpm/$(DIST)/
	cp -av $(ISOFILES) $(PKGNAME)/iso
	cp -av $(SRCFILES) $(PKGNAME)/src
	cd $(PKGNAME) && sha256sum $$(find . -type f) > CHECKSUMS.sha256
	find $(PKGNAME) -type f | zip -r -0 -@ -v $(PKGNAME).zip
	zip -T $(PKGNAME).zip
	#ls $(PKGNAME)/* | cpio --create --format=crc --verbose > $(PKGNAME).cpio
	#cpio --extract --only-verify-crc < $(PKGNAME).cpio
	test -n "$(PKGNAME)" && rm -rv $(PKGNAME)/*
	rmdir $(PKGNAME)
